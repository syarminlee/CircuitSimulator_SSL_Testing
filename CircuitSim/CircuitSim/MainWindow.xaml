<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:my="clr-namespace:CircuitSim.BaseObjects"
    xmlns:IO="clr-namespace:CircuitSim.IO" xmlns:Gates="clr-namespace:CircuitSim.Gates" xmlns:FlipFlop="clr-namespace:CircuitSim.FlipFlop" 
    x:Class="CircuitSim.MainWindow"
    SnapsToDevicePixels="True" UseLayoutRounding="True"
    Title="Swinburne Logic Simulator" MinHeight="600" MinWidth="800" Height="600" Width="800" Loaded="Window_Loaded">
    <Grid>
        <Menu IsMainMenu="True" Height="20" VerticalAlignment="Top">
        </Menu>

        <!-- Existing Buttons -->
        <Button x:Name="StepButton" Content="Step" Width="55" Margin="150,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Click="StepButton_Click"/>
        <Button x:Name="ToggleTimerButton" Content="Pause" Width="55" Margin="210,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Click="ToggleTimerButton_Click" />
        <Label  x:Name="TimerTickLabel" Content="100ms" HorizontalAlignment="Left" Margin="280,-5,0,0" VerticalAlignment="Top"/>
        <Slider x:Name="TimerSlider" HorizontalAlignment="Left" Margin="330,0,0,0" Width="250" VerticalAlignment="Top" Minimum="10" Maximum="2000" ValueChanged="TimerSlider_ValueChanged" Value="100"/>

        <!-- Undo and Redo Buttons -->
        <Button x:Name="UndoButton" Content="Undo" Width="55" Margin="600,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Click="UndoButton_Click"/>
        <Button x:Name="RedoButton" Content="Redo" Width="55" Margin="660,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Click="RedoButton_Click"/>


        <!-- Object Selector and Canvas -->
        <ListView x:Name="ObjectSelector" HorizontalAlignment="Left" Margin="0,20,0,0" VerticalAlignment="Stretch" Width="150" PreviewMouseDown="ObjectSelector_PreviewMouseDown">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="IsSelected" Value="True"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding (FrameworkElement.ActualWidth), 
                        RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"
                        ItemWidth="{Binding (ListView.View).ItemWidth, 
                        RelativeSource={RelativeSource AncestorType=ListView}}"
                        MinWidth="{Binding ItemWidth, RelativeSource={RelativeSource Self}}"
                        ItemHeight="{Binding (ListView.View).ItemHeight, 
                        RelativeSource={RelativeSource AncestorType=ListView}}" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <Gates:And CanMove="False" ToolTip="2-Input AND"/>
            <Gates:Or CanMove="False" ToolTip="2-Input OR"/>
            <Gates:Not CanMove="False" ToolTip="Inverter"/>
            <IO:Junction CanMove="False" ToolTip="2-Way Junction"/>
            <IO:LED CanMove="False" ToolTip="LED"/>
            <IO:ToggleSwitch CanMove="False" ToolTip="On/Off Toggle Switch"/>
            <IO:Power CanMove="False" ToolTip="Power"/>
            <IO:TextLED CanMove="False" ToolTip="TextLED"/>
            <IO:Clock CanMove="False" ToolTip="Clock"/>
            <IO:Keypad CanMove="False" ToolTip="Keypad Input"/>
            <FlipFlop:D CanMove="False" ToolTip="D FlipFlop"/>
            <FlipFlop:JK CanMove="False" ToolTip="JK FlipFlop"/>
        </ListView>

        <Canvas HorizontalAlignment="Stretch" Margin="150, 20, 0, 0" AllowDrop="True" VerticalAlignment="Stretch" Background="WhiteSmoke" x:Name="CircuitCanvas">
            <Path Stroke="Black" StrokeThickness="1">
                <Path.Data>
                    <GeometryGroup x:Name="Connections"/>
                </Path.Data>
            </Path>
        </Canvas>
    </Grid>
</Window>

    